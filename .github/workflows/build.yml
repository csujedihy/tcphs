name: Build

# Trigger the workflow on push or pull request to main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Define the job
jobs:
  build-win:
    # Use Windows environment
    runs-on: windows-latest

    steps:
    # Checkout the repository code
    - name: Checkout repository
      uses: actions/checkout@v3

    # Setup MSBuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1
      with:
        vs-version: '17.0'  # Visual Studio 2022

    # Optional: Setup NuGet (uncomment if your .vcxproj uses NuGet packages)
    #- name: Setup NuGet
    #  uses: NuGet/setup-nuget@v1

    # Optional: Restore NuGet packages (uncomment if your project uses NuGet)
    #- name: Restore NuGet packages
    #  run: nuget restore tcphs.vcxproj

    # Build the project
    - name: Build Project
      working-directory: .\win\
      run: |
        msbuild tcphs.vcxproj /p:Configuration=Release /p:Platform=x64 /maxcpucount

    # Optional: Upload build artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: win-bin-release-x64
        path: |
          win\bin\Release\x64\*.*

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the repository
    - uses: actions/checkout@v4
    
    # Install build dependencies
    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
        
# Debug: Show Makefile contents
    - name: Show Makefile
      working-directory: ./linux
      run: |
        cat Makefile
        
    # Build the project (clean first to force rebuild)
    - name: Build Linux
      working-directory: ./linux
      shell: bash
      run: |
        make clean || true  # Continue even if clean fails
        make all || make  # Try 'make all' first, fallback to 'make'
    # Upload build artifacts
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: |
          linux/*.o
          linux/*.a
          linux/*.so
          linux/*  # This catches any executable files without extension

    # Optional: Add cleanup step
    - name: Clean up
      if: always()
      working-directory: ./linux
      run: |
        make clean